{"version":3,"sources":["webpack://TrebuchetClient/webpack/bootstrap","webpack://TrebuchetClient/./src/MessageQueue.ts","webpack://TrebuchetClient/./src/SSETrebuchet.ts","webpack://TrebuchetClient/./src/SocketTrebuchet.ts","webpack://TrebuchetClient/./src/Trebuchet.ts","webpack://TrebuchetClient/./src/WRTCTrebuchet.ts","webpack://TrebuchetClient/./src/getTrebuchet.ts","webpack://TrebuchetClient/./src/index.ts","webpack://TrebuchetClient/external \"@mattkrick/fast-rtc-peer\"","webpack://TrebuchetClient/external \"eventemitter3\""],"names":[],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.ts\");\n","import {Data} from './Trebuchet'\n\nexport type SendFn = (message: Data) => void\n\nclass MessageQueue {\n  queue: Array<Data> = []\n\n  add (message: Data) {\n    this.queue.push(message)\n  }\n\n  clear () {\n    this.queue = []\n  }\n\n  flush (send: SendFn) {\n    const startingQueueLength = this.queue.length\n    this.queue.forEach((message) => {\n      send(message)\n    })\n    // if flush is called before messages can be sent, they'll end up back in the queue. keep those.\n    this.queue.splice(0, startingQueueLength)\n  }\n}\n\nexport default MessageQueue\n","import Trebuchet, {Data, TrebuchetSettings} from './Trebuchet'\n\nexport type FetchData = (data: any, connectionId: string) => Promise<Data>\nexport type FetchPing = (connectionId: string) => Promise<Response>\nexport type FetchReliable = (connectionId: string, data: ArrayBuffer) => Promise<Response>\n\nexport interface SSESettings extends TrebuchetSettings {\n  getUrl: () => string\n  fetchData: FetchData\n  fetchPing: FetchPing\n  fetchReliable?: FetchReliable\n}\nconst MAX_INT = 2 ** 31 - 1\nconst MAX_MID = 2 ** 31 - 1\nconst MAX_IGNORE_LEN = 1000\n\nconst decode = (msg: string) => {\n  const parsedData = JSON.parse(msg)\n  if (!Array.isArray(parsedData)) return {message: parsedData}\n  const [message, mid] = parsedData\n  return {message, mid}\n}\n\nclass SSETrebuchet extends Trebuchet {\n  source!: EventSource\n  private readonly getUrl: () => string\n  private readonly fetchData: FetchData\n  private readonly fetchPing: FetchPing\n  private readonly fetchReliable?: FetchReliable\n  private connectionId: string | undefined = undefined\n  constructor (settings: SSESettings) {\n    super(settings)\n    this.getUrl = settings.getUrl\n    this.fetchData = settings.fetchData\n    this.fetchPing = settings.fetchPing\n    this.fetchReliable = settings.fetchReliable\n    this.setup()\n  }\n\n  private sendAck (mid: number) {\n    const ack = new Uint8Array(4)\n    const view = new DataView(ack.buffer)\n    // first bit is a 0 if ACK\n    const ackId = mid << 1\n    // guarantee little endian\n    view.setUint32(0, ackId, true)\n    this.reply(ack)\n  }\n\n  private sendReq (mid: number) {\n    const req = new Uint8Array(4)\n    const view = new DataView(req.buffer)\n    // first bit is 0 if REQ\n    const reqId = (mid << 1) | 1\n    view.setUint32(0, reqId, true)\n    this.reply(req)\n  }\n\n  private releaseNextRobustMessage () {\n    const nextId = this.lastMid + 1\n    const message = this.robustQueue[nextId]\n    if (!message) {\n      // we're all caught up!\n      this.requestedMids.length = 0\n      return\n    }\n    delete this.robustQueue[nextId]\n    this.lastMid = nextId\n    this.emit('data', message)\n    this.releaseNextRobustMessage()\n  }\n\n  protected setup = () => {\n    this.source = new EventSource(this.getUrl())\n    this.source.onopen = this.handleOpen.bind(this)\n\n    this.source.onerror = () => {\n      this.connectionId = undefined\n      if (this.canConnect === undefined) {\n        this.canConnect = false\n        // keep it from reconnecting\n        this.source.close()\n        this.emit('supported', false)\n      } else if (this.canConnect) {\n        if (this.reconnectAttempts === 0) {\n          // only send the message once per disconnect\n          this.emit('disconnected')\n        }\n        // EventSources have a built-in retry protocol, we'll just use that\n        this.reconnectAttempts++\n      }\n    }\n\n    this.source.addEventListener('ka', () => {\n      if (!this.connectionId || !this.timeout || this.timeout > MAX_INT) return\n      this.fetchPing(this.connectionId).catch()\n      clearTimeout(this.keepAliveTimeoutId)\n      this.keepAliveTimeoutId = window.setTimeout(() => {\n        this.keepAliveTimeoutId = undefined\n        this.source.close()\n        this.emit('disconnected')\n        this.reconnectAttempts++\n        this.setup()\n      }, this.timeout * 1.5)\n    })\n\n    this.source.addEventListener('id', (event: any) => {\n      this.connectionId = event.data\n      this.messageQueue.flush(this.send)\n    })\n\n    this.source.addEventListener('close', (event: any) => {\n      const splitIdx = event.data.indexOf(':')\n      const code = event.data.slice(0, splitIdx)\n      const reason = event.data.slice(splitIdx + 1)\n      this.emit('close', {code, reason})\n      this.source.close()\n    })\n\n    this.source.onmessage = (event: MessageEvent) => {\n      const {message, mid} = decode(event.data)\n      if (!message) return\n      // handle non-reliable messages\n      if (typeof mid !== 'number' || mid > MAX_MID || mid < 0) {\n        this.emit('data', message)\n        return\n      }\n      // ignore mids that were already requested & processed\n      if (this.midsToIgnore.includes(mid)) return\n\n      // TCP guarantees AT MOST ONCE\n      // if a mid is requested, then the delivery guarantee becomes AT LEAST ONCE, so we need to ignore dupes\n      if (this.requestedMids.includes(mid)) {\n        this.midsToIgnore.push(mid)\n        if (this.midsToIgnore.length > MAX_IGNORE_LEN) {\n          this.midsToIgnore.splice(0, 1)\n        }\n      }\n\n      this.sendAck(mid)\n\n      if (this.lastMid + 1 === mid) {\n        // get next in order\n        this.lastMid = mid\n        this.emit('data', message)\n        this.releaseNextRobustMessage()\n        return\n      }\n\n      // a missing message was detected!\n      this.robustQueue[mid] = message\n\n      // request the first missing message (could get called multiple times)\n      const missingMid = this.lastMid + 1\n      this.sendReq(missingMid)\n      this.requestedMids.push(missingMid)\n    }\n  }\n\n  private handleFetch = async (message: Data) => {\n    const res = await this.fetchData(message, this.connectionId!)\n    if (res) {\n      this.emit('data', res)\n    }\n  }\n\n  send = (message: Data) => {\n    if (this.source.readyState === this.source.OPEN && this.connectionId) {\n      this.handleFetch(message).catch()\n    } else {\n      this.messageQueue.add(message)\n    }\n  }\n\n  reply = (data: ArrayBufferLike) => {\n    if (this.source.readyState === this.source.OPEN && this.connectionId && this.fetchReliable) {\n      this.fetchReliable(this.connectionId, data).catch()\n    }\n  }\n\n  close (reason?: string) {\n    this.messageQueue.clear()\n    if (this.source.CLOSED) return\n    // called by the user, so we know it's intentional\n    this.canConnect = false\n    this.source.close()\n    this.emit('close', {code: 1000, reason})\n  }\n}\n\nexport default SSETrebuchet\n","import Trebuchet, {Data, TrebuchetSettings} from './Trebuchet'\n\ntype Encode = (msg: any) => Data\ntype Decode = (msg: any) => {message: any; mid?: number}\n\nexport interface WSSettings extends TrebuchetSettings {\n  getUrl: () => string\n  encode?: Encode\n  decode?: Decode\n}\n\nconst PING = 57\nconst PONG = new Uint8Array([65])\nconst MAX_MID = 2 ** 31 - 1\nconst MAX_IGNORE_LEN = 1000\n\nexport const TREBUCHET_WS = 'trebuchet-ws'\n\nconst isPing = (data: Data) => {\n  if (typeof data === 'string') return false\n  const buffer = new Uint8Array(data)\n  return buffer.length === 1 && buffer[0] === PING\n}\n\nconst defaultDecode: Decode = (msg) => {\n  const parsedData = JSON.parse(msg)\n  if (!Array.isArray(parsedData)) return {message: parsedData}\n  const [message, mid] = parsedData\n  return {message, mid}\n}\n\nclass SocketTrebuchet extends Trebuchet {\n  ws!: WebSocket\n  private readonly getUrl: () => string\n  private encode: Encode\n  private decode: Decode\n  private mqTimer: number | undefined\n\n  constructor (settings: WSSettings) {\n    super(settings)\n    const {decode, encode} = settings\n    this.encode = encode || JSON.stringify\n    this.decode = decode || defaultDecode\n    this.getUrl = settings.getUrl\n    this.setup()\n  }\n  private keepAlive () {\n    // this.lastKeepAlive = now\n    clearTimeout(this.keepAliveTimeoutId)\n    // per the protocol, the server sends a ping every 10 seconds\n    // if it takes more than 5 seconds to receive that ping, something is wrong\n    this.keepAliveTimeoutId = window.setTimeout(() => {\n      this.keepAliveTimeoutId = undefined\n      this.ws.close(1000)\n    }, this.timeout * 1.5)\n  }\n\n  private sendAck (mid: number) {\n    const ack = new Uint8Array(4)\n    const view = new DataView(ack.buffer)\n    // first bit is a 0 if ACK\n    const ackId = mid << 1\n    // guarantee little endian\n    view.setUint32(0, ackId, true)\n    this.ws.send(ack)\n  }\n\n  private sendReq (mid: number) {\n    const req = new Uint8Array(4)\n    const view = new DataView(req.buffer)\n    // first bit is 0 if REQ\n    const reqId = (mid << 1) | 1\n    view.setUint32(0, reqId, true)\n    this.ws.send(req)\n  }\n\n  private releaseNextRobustMessage () {\n    const nextId = this.lastMid + 1\n    const message = this.robustQueue[nextId]\n    if (!message) {\n      // we're all caught up!\n      this.requestedMids.length = 0\n      return\n    }\n    delete this.robustQueue[nextId]\n    this.lastMid = nextId\n    this.emit('data', message)\n    this.releaseNextRobustMessage()\n  }\n\n  protected setup () {\n    this.ws = new WebSocket(this.getUrl(), TREBUCHET_WS)\n    this.ws.binaryType = 'arraybuffer'\n    this.ws.onopen = this.handleOpen.bind(this)\n\n    this.ws.onmessage = (event: MessageEvent) => {\n      const {data} = event\n      if (isPing(data)) {\n        this.keepAlive()\n        this.ws.send(PONG)\n      } else {\n        const {message, mid} = this.decode(data)\n        if (!message) return\n        // handle non-reliable messages\n        if (typeof mid !== 'number' || mid > MAX_MID || mid < 0) {\n          this.emit('data', message)\n          return\n        }\n\n        // ignore mids that were already requested & processed\n        if (this.midsToIgnore.includes(mid)) return\n\n        // TCP guarantees AT MOST ONCE\n        // if a mid is requested, then the delivery guarantee becomes AT LEAST ONCE, so we need to ignore dupes\n        if (this.requestedMids.includes(mid)) {\n          this.midsToIgnore.push(mid)\n          if (this.midsToIgnore.length > MAX_IGNORE_LEN) {\n            this.midsToIgnore.splice(0, 1)\n          }\n        }\n\n        this.sendAck(mid)\n\n        if (this.lastMid + 1 === mid) {\n          // get next in order\n          this.lastMid = mid\n          this.emit('data', message)\n          this.releaseNextRobustMessage()\n          return\n        }\n\n        // a missing message was detected!\n        this.robustQueue[mid] = message\n\n        // request the first missing message (could get called multiple times)\n        const missingMid = this.lastMid + 1\n        this.sendReq(missingMid)\n        this.requestedMids.push(missingMid)\n      }\n    }\n\n    this.ws.onerror = () => {\n      if (this.canConnect === undefined) {\n        this.canConnect = false\n        this.emit('supported', false)\n      }\n    }\n\n    this.ws.onclose = (event: CloseEvent) => {\n      // if the user or the firewall caused the close, don't reconnect & don't announce the disconnect\n      const {code, reason} = event\n      if (reason) {\n        // if there's a reason to close, keep it closed\n        this.canConnect = false\n      }\n      this.emit('close', {code, reason})\n      if (this.canConnect) {\n        if (this.reconnectAttempts === 0) {\n          // only send the message once per disconnect\n          this.emit('disconnected')\n        }\n        this.tryReconnect()\n      }\n    }\n  }\n\n  send = (message: any) => {\n    if (this.batchDelay === -1) {\n      if (this.ws.readyState === this.ws.OPEN) {\n        this.ws.send(this.encode(message))\n      } else {\n        this.messageQueue.add(message)\n      }\n    } else {\n      this.messageQueue.add(message)\n      if (!this.mqTimer) {\n        this.mqTimer = window.setTimeout(() => {\n          this.mqTimer = undefined\n          const {queue} = this.messageQueue\n          if (this.ws.readyState === this.ws.OPEN && queue.length > 0) {\n            this.messageQueue.clear()\n            const message = queue.length === 1 ? queue[0] : queue\n            this.ws.send(this.encode(message))\n          }\n        }, this.batchDelay)\n      }\n    }\n  }\n\n  close (reason?: string) {\n    // called by the user, so we know it's intentional\n    this.messageQueue.clear()\n    if (this.ws.readyState === this.ws.CLOSED) return\n    this.ws.close(1000, reason || 'clientClose')\n  }\n}\n\nexport default SocketTrebuchet\n","import EventEmitter from 'eventemitter3'\nimport StrictEventEmitter from 'strict-event-emitter-types'\nimport MessageQueue from './MessageQueue'\n\nexport interface TrebuchetSettings {\n  timeout?: number\n  batchDelay?: number\n}\n\ninterface ClosePayload {\n  code?: number\n  reason?: string\n}\n\ninterface TrebuchetEvents {\n  close: ClosePayload\n  data: object | string | boolean | number\n  connected: void\n  reconnected: void\n  disconnected: void\n  supported: boolean\n}\n\nexport type Data = string | ArrayBufferLike\n\nexport type TrebuchetEmitter = {new (): StrictEventEmitter<EventEmitter, TrebuchetEvents>}\n\nabstract class Trebuchet extends (EventEmitter as TrebuchetEmitter) {\n  protected readonly backoff: Array<number> = [1000, 2000, 5000, 10000]\n  protected readonly timeout: number\n  protected readonly batchDelay: number\n  protected messageQueue = new MessageQueue()\n  protected canConnect: boolean | undefined = undefined\n  protected reconnectAttempts = 0\n  protected reconnectTimeoutId: number | undefined\n  protected keepAliveTimeoutId: number | undefined\n  protected lastMid = -1\n  protected robustQueue = {} as {[mid: number]: any}\n  protected midsToIgnore = [] as number[]\n  protected requestedMids = [] as number[]\n  constructor (settings: TrebuchetSettings) {\n    super()\n    this.timeout = settings.timeout || 10000\n    this.batchDelay = settings.batchDelay ?? -1\n  }\n\n  abstract close (reason?: string): void\n  abstract send (message: any): void\n\n  protected abstract setup (): void\n\n  protected handleOpen = () => {\n    if (this.reconnectAttempts === 0) {\n      this.canConnect = true\n      this.emit('supported', true)\n      this.emit('connected')\n    } else {\n      this.reconnectAttempts = 0\n      this.emit('reconnected')\n    }\n    this.messageQueue.flush(this.send)\n    this.lastMid = -1\n    this.robustQueue = {}\n    this.midsToIgnore = []\n    this.requestedMids = []\n  }\n\n  protected tryReconnect () {\n    if (!this.canConnect) return\n    if (!this.reconnectTimeoutId) {\n      const backoffInterval = Math.min(this.reconnectAttempts, this.backoff.length - 1)\n      const delay = this.backoff[backoffInterval] + Math.random() * 500\n      this.reconnectTimeoutId = window.setTimeout(() => {\n        this.reconnectTimeoutId = undefined\n        this.reconnectAttempts++\n        this.setup()\n      }, delay)\n    }\n  }\n\n  async isSupported () {\n    if (this.canConnect !== undefined) return this.canConnect\n    return new Promise<boolean>((resolve) => {\n      this.once('supported', resolve)\n    })\n  }\n}\n\nexport default Trebuchet\n","import FastRTCPeer, {\n  DATA,\n  DATA_CLOSE,\n  DATA_OPEN,\n  DataPayload,\n  DispatchPayload,\n  ERROR,\n  SIGNAL\n} from '@mattkrick/fast-rtc-peer'\nimport Trebuchet, {Data, TrebuchetSettings} from './Trebuchet'\n\nexport type FetchSignalServer = (signal: DispatchPayload) => Promise<DispatchPayload | null>\n\nexport interface WRTCSettings extends TrebuchetSettings {\n  fetchSignalServer: FetchSignalServer\n  rtcConfig: RTCConfiguration\n}\n\nconst MAX_INT = 2 ** 31 - 1\nclass WRTCTrebuchet extends Trebuchet {\n  peer!: FastRTCPeer\n  private readonly rtcConfig: RTCConfiguration\n  private readonly fetchSignalServer: FetchSignalServer\n\n  constructor (settings: WRTCSettings) {\n    super(settings)\n    this.fetchSignalServer = settings.fetchSignalServer\n    this.rtcConfig = settings.rtcConfig || {}\n    this.setup()\n  }\n\n  private responseToKeepAlive () {\n    if (!this.timeout || this.timeout > MAX_INT) return\n    this.peer.send('ka')\n    clearTimeout(this.keepAliveTimeoutId)\n    // per the protocol, the server sends a ping every 10 seconds\n    // if it takes more than 5 seconds to receive that ping, something is wrong\n    this.keepAliveTimeoutId = window.setTimeout(this.peer.close.bind(this.peer), this.timeout * 1.5)\n  }\n\n  protected setup () {\n    this.peer = new FastRTCPeer({isOfferer: true, ...this.rtcConfig})\n    this.peer.on(SIGNAL, async (signal: DispatchPayload) => {\n      const result = await this.fetchSignalServer(signal)\n      if (result) {\n        this.peer.dispatch(result)\n      }\n    })\n\n    this.peer.on(DATA_OPEN, this.handleOpen.bind(this))\n\n    this.peer.on(ERROR, () => {\n      if (this.canConnect === undefined) {\n        this.canConnect = false\n        this.emit('supported', false)\n      }\n    })\n\n    this.peer.on(DATA, (data) => {\n      if (data === 'ka') {\n        this.responseToKeepAlive()\n      } else {\n        this.emit('data', data)\n      }\n    })\n\n    this.peer.on(DATA_CLOSE, () => {\n      // auth is taken care of by the signaling server\n      if (!this.canConnect) return\n      if (this.reconnectAttempts === 0) {\n        // only send the message once per disconnect\n        this.emit('disconnected')\n      }\n      this.tryReconnect()\n    })\n  }\n\n  send (message: Data) {\n    if (this.peer.peerConnection.iceConnectionState === 'connected') {\n      this.peer.send(message as DataPayload)\n    } else {\n      this.messageQueue.add(message)\n    }\n  }\n\n  close (reason?: string) {\n    // called by the user, so we know it's intentional\n    this.canConnect = false\n    this.messageQueue.clear()\n    this.peer.close()\n    this.emit('close', {code: 1000, reason})\n  }\n}\n\nexport default WRTCTrebuchet\n","import Trebuchet from './Trebuchet'\n\nconst getTrebuchet = async (thunks: Array<() => Trebuchet>) => {\n  for (let i = 0; i < thunks.length; i++) {\n    const trebuchet = thunks[i]()\n    if (await trebuchet.isSupported()) {\n      return trebuchet\n    }\n  }\n  return null\n}\n\nexport default getTrebuchet\n","export {default as Trebuchet} from './Trebuchet'\nexport {default as SocketTrebuchet} from './SocketTrebuchet'\nexport {default as SSETrebuchet} from './SSETrebuchet'\nexport {default as WRTCTrebuchet} from './WRTCTrebuchet'\nexport {default} from './getTrebuchet'\n\n// export all the string constants & types\nexport * from './Trebuchet'\n","module.exports = require(\"@mattkrick/fast-rtc-peer\");","module.exports = require(\"eventemitter3\");"],"sourceRoot":""}